{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","eassing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySA2BeA,MAtBf,SAAmBC,GAEf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAEpB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAQL,EAAKM,KAAMC,SAAU,SAACC,GAAKZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAE5G,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAAQC,QAAW,kBAAKhB,EAAMiB,WAAWb,EAAKI,cAL9DJ,EAAKI,QAS/C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,QAAQ,cAAjC,SAAgDlB,O,eCf5DmB,IAAQC,IAAIC,K,IAsFGC,E,kDAnFb,WAAYvB,GACX,IAAD,8BACE,cAAMA,IACDwB,MAAM,CACTtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAGR,EAAKkB,YAAa,EAAKA,YAAYC,KAAjB,gBAClB,EAAKC,QAAS,EAAKA,QAAQD,KAAb,gBACd,EAAKV,WAAY,EAAKA,WAAWU,KAAhB,gBACjB,EAAKd,UAAW,EAAKA,UAAUc,KAAf,gBAZlB,E,+CAgBA,SAAYf,GAEViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAKE,EAAEE,OAAOL,MACdD,IAAIuB,KAAKC,W,qBAKf,SAAQpB,GAENA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GAAmB,KAAhBS,EAAQxB,KACX,CACE,IAAMyB,EAAS,GAAD,mBAAKN,KAAKL,MAAMtB,OAAhB,CAAsBgC,IACpCL,KAAKC,SAAS,CACZ5B,MAAMiC,EACNV,YAAY,CACVf,KAAK,GACLF,IAAI,S,wBAKZ,SAAWA,GAET,IAAM4B,EAAcP,KAAKL,MAAMtB,MAAMmC,QAAO,SAAAjC,GAAI,OAAGA,EAAKI,MAAMA,KAC9DqB,KAAKC,SAAS,CACZ5B,MAAMkC,M,uBAIV,SAAU1B,EAAKF,GAEb,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IAEZJ,EAAKM,KAAKA,MAGdmB,KAAKC,SAAS,CACZ5B,MAAMA,M,oBAKV,WAEE,OACE,sBAAKG,UAAU,MAAf,UACE,iCACA,uBAAME,GAAG,aAAa+B,SAAUT,KAAKD,QAArC,UACE,uBAAOtB,KAAK,OAAOiC,YAAY,aAAa9B,MAAOoB,KAAKL,MAAMC,YAAYf,KAAMC,SAAUkB,KAAKH,cAC/F,wBAAQpB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAWJ,MAAO2B,KAAKL,MAAMtB,MAAOe,WAAYY,KAAKZ,WAAYJ,UAAWgB,KAAKhB,mB,GA9ErE2B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9321f54.chunk.js","sourcesContent":["import React from 'react';\nimport './ListItems.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FlipMove from 'react-flip-move';\n\nfunction ListItems(props)\n{\n    const items = props.items;\n    const listItems = items.map(item =>\n        {\n            return <div className=\"list\" key={item.key}>\n                <p>\n                    <input type=\"text\" id={item.key} value= {item.text} onChange={(e)=>{props.setUpdate(e.target.value,item.key)}}></input>\n                    \n                <span>\n                    <FontAwesomeIcon className=\"faicons\" icon='trash' onClick = {()=> props.deleteItem(item.key)} ></FontAwesomeIcon></span>\n                </p>\n            </div>\n        })\n    return (\n        <div>\n            <FlipMove duration={400} eassing=\"ease-in-out\">{listItems}</FlipMove>\n            \n        </div>\n    )\n}\n\nexport default ListItems","import './App.css';\nimport React from 'react';\nimport ListItems from './ListItems.js';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component{\n  constructor(props)\n  {\n    super(props);\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    this.handleInput= this.handleInput.bind(this);\n    this.addItem= this.addItem.bind(this);\n    this.deleteItem= this.deleteItem.bind(this);\n    this.setUpdate= this.setUpdate.bind(this);\n  }\n\n\n  handleInput(e)\n  {\n    this.setState({\n      currentItem:{\n        text:e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n\n  addItem(e)\n  {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    // console.log(newItem);\n    if(newItem.text !==\"\")\n    {\n      const newItems=[...this.state.items,newItem];\n      this.setState({\n        items:newItems,\n        currentItem:{\n          text:'',\n          key:''\n        }\n      })\n    }\n  }\n  deleteItem(key)\n  {\n    const filteredItems=this.state.items.filter(item=> item.key!==key);\n    this.setState({\n      items:filteredItems\n    })\n  }\n\n  setUpdate(text,key)\n  {\n    const items = this.state.items;\n    items.map(item => {\n      if(item.key===key)\n      {\n        item.text=text;\n      }\n    })\n    this.setState({\n      items:items\n    })\n  }\n\n\n  render()\n  {\n    return (\n      <div className=\"app\">\n        <header>\n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"Enter Todo\" value={this.state.currentItem.text} onChange={this.handleInput}></input>\n          <button type=\"submit\">Add</button>\n        </form>\n      </header>\n      <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}></ListItems>\n      </div>\n      \n    )\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}